# file inspired by mega-hz from https://community.home-assistant.io/t/gosund-ep2-plug-with-esphome/433586 Thanks"

esphome:
  name: gosundep01
  platform: ESP8266
  board: esp8285

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "YOUR KEY"

ota:
  password: "YOUR KEY"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Gosundep02 Fallback Hotspot"
    password: "YOUR BACKUP"

captive_portal:


substitutions:
  plug_name: gosundep01
  # Higher value gives lower watt readout
  current_res: "0.00237" # hier den Watt Wert anpassen
  # Lower value gives lower voltage readout
  voltage_div: "687" # hier den Volt Wert anpassen
  
# Enable Web server
web_server:
  port: 80
  
time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  # Binary sensor for the button press
  - platform: gpio
    name: "${plug_name}_button"
    pin:
      number: GPIO13
      inverted: true
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    id: relay
    name: "${plug_name}_Relay"
    restore_mode: ALWAYS_OFF
    pin: GPIO15
    on_turn_on:
      - light.turn_on: led
    on_turn_off:
      - light.turn_off: led
sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO05
    cf1_pin: GPIO04
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: "${plug_name}_Amperage"
      unit_of_measurement: A
    voltage:
      name: "${plug_name}_Voltage"
      unit_of_measurement: V
    power:
      name: "${plug_name}_Wattage"
      unit_of_measurement: W
      id: "${plug_name}_Wattage"
    change_mode_every: 8
    update_interval: 5s
  - platform: total_daily_energy
    name: "${plug_name}_Total Daily Energy"
    power_id: "${plug_name}_Wattage"
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
    unit_of_measurement: kWh
      
# Extra sensor to keep track of plug uptime
  - platform: uptime
    name: ${plug_name}_Uptime Sensor
    
  - platform: wifi_signal
    name: ${plug_name}_WiFi Signal
    update_interval: 60s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${plug_name}_WiFi IP
    ssid:
      name: ${plug_name}_WiFi SSID
    
output:
  # blue LED
  - platform: esp8266_pwm
    id: state_led
    pin:
      number: GPIO02    
      inverted: true

light:
  # Relay state light
  - platform: monochromatic
    output: state_led
    id: led

 #green LED
status_led:
  pin:
    number: GPIO00     
    inverted: true
